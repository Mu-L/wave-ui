import{r as l,o as d,f as u,a,w as n,b as e,e as s,i as p,_}from"./index.d8ad3dc7.js";const h=s("Customization Via SCSS (optional)"),b=e("strong",null,"If you are using Nuxt",-1),g=s(", the steps to follow are different. Check the last paragraph of the"),m=e("a",{class:"ml1",href:"/getting-started#installation-on-nuxt"},"Nuxt installation",-1),y=s("."),f=p(`<p class="mt8">Wave UI components rely on SCSS variables that you can easily override from your SCSS file,
just like this:</p><pre class="ssh-pre" data-label="SCSS"><span class="purple text-bold">@import\xA0</span><span class="red-light2">&#39;wave-ui/src/wave-ui/scss/_variables&#39;</span><span class="blue-grey">;</span><br><br><span class="pink">$base-font-size</span><span class="blue-grey">:\xA0</span><span class="deep-orange">14px</span><span class="blue-grey">;</span><br><span class="pink">$base-increment</span><span class="blue-grey">:\xA0</span><span class="deep-orange">5px</span><span class="blue-grey">;</span></pre><div class="title4">But to do so, you need to slightly modify your config.</div>`,3),v=s("Modify your config"),w=e("div",{class:"title4 mt4"},"1. Install the devDependencies",-1),S=s("npm i -D pug pug-plain-loader sass sass-loader@10"),x=e("small",{class:"text-italic grey"},"The dev dependencies are only needed for building the project. They will not ship to production.",-1),k={class:"mt3"},C=e("strong",null,"Notes:",-1),I=e("li",null,[e("span",{class:"code"},"sass-loader 11+"),s(" is not compatible with Webpack 4 or less.")],-1),$=s("The "),j=e("span",{class:"code"},"sass",-1),U=s(" update is needed to handle the"),W={class:"ml1",href:"https://github.com/sass/sass/issues/2565",target:"_blank"},z=s("new Sass division"),D=s("mdi mdi-open-in-new"),N=s("."),V=e("div",{class:"title4 mt8"},[s("2. Update "),e("span",{class:"code"},"main.js")],-1),T=e("p",null,"In main.js, replace the 2 Wave UI imports with:",-1),B=s(`import WaveUI from 'wave-ui/src/wave-ui'
`),F=e("div",{class:"title4 mt8"},"3. Create an SCSS file & import it globally",-1),O=e("li",null,[s("In your project "),e("span",{class:"code"},"src"),s(" folder, create a "),e("code",null,"_variables.scss"),s(" (usually in an "),e("span",{class:"code"},"scss"),s(`
folder), and import Wave UI's variables: `),e("code",null,"@import 'wave-ui/src/wave-ui/scss/_variables';"),s(`.
`)],-1),Y={class:"mt2"},G=s("Import your SCSS variables file globally from Vue config and re-serve the app."),M=s(`module.exports = {
  transpileDependencies: ['wave-ui'],
  css: {
    loaderOptions: {
      // \`additionalData\` was called \`prependData\` prior sass-loader 9.
      sass: { additionalData: '@import "@/scss/_variables.scss";' }
    }
  }
}
`),q=e("p",null,[e("strong",null,"Or if you use Vite"),s(`,
In `),e("span",{class:"code"},"vite.config.js"),s(", the import of variables is done like so:")],-1),E=s(`css: {
  preprocessorOptions: {
    scss: {
      additionalData: '@import "@/scss/variables";'
    }
  }
}
`),J=s(`Note from the above code that since you import Wave UI source code, you need to transpile it.
`),P=e("div",{class:"title4 mt8"},"Voil\xE0 !",-1),A=e("p",null,"You're all set, you can now override the SCSS variables.",-1),H=e("div",{class:"w-divider my12"},null,-1),K=s("Basic SCSS overrides"),L=p('<pre class="ssh-pre" data-label="@/scss/_variables.scss"><span class="grey-light1 text-italic">// First import the Wave UI variables, then override what you want.</span><br><span class="purple text-bold">@import\xA0</span><span class="red-light2">&#39;wave-ui/src/wave-ui/scss/_variables&#39;</span><span class="blue-grey">;</span><br><br><span class="pink">$base-font-size</span><span class="blue-grey">:\xA0</span><span class="deep-orange">14px</span><span class="blue-grey">;</span><br><span class="pink">$base-increment</span><span class="blue-grey">:\xA0</span><span class="purple text-bold">round</span><span class="blue-grey">(</span><span class="pink">$base-font-size</span><span class="blue-grey mx1">/</span><span class="orange">4</span><span class="blue-grey">)</span><span class="blue-grey">;</span><br><span class="pink">$layout-padding</span><span class="blue-grey">:\xA0</span><span class="pink">$base-increment</span><span class="blue-grey mx1">*</span><span class="orange">4</span><span class="blue-grey">;</span><br><span class="pink">$border-radius</span><span class="blue-grey">:\xA0</span><span class="deep-orange">3px</span><span class="blue-grey">;</span><br><span class="pink">$border</span><span class="blue-grey">:\xA0</span><span class="deep-orange">1px solid rgba(0, 0, 0, 0.15)</span><span class="blue-grey">;</span><br><span class="pink">$drawer-max-size</span><span class="blue-grey">:\xA0</span><span class="deep-orange">380px</span><span class="blue-grey">;</span><br><span class="pink">$transition-duration</span><span class="blue-grey">:\xA0</span><span class="deep-orange">0.25s</span><span class="blue-grey">;</span><br><span class="pink">$box-shadow</span><span class="blue-grey">:\xA0</span><span class="deep-orange">0 3px 1px -2px rgba(0, 0, 0, 0.2),</span><br><span class="deep-orange">             0 2px 2px 0 rgba(0, 0, 0, 0.15),</span><br><span class="deep-orange">             0 1px 5px 0 rgba(0, 0, 0, 0.15)</span><span class="blue-grey">;</span></pre>',1),Q=s("Give Wave UI CSS more priority"),R=p(`<p>It is also possible to control Wave UI&#39;s CSS rules priorities by overriding the CSS base scope:</p><pre class="ssh-pre" data-label="SCSS"><span class="pink">$css-scope</span><span class="blue-grey mr1">:</span><span class="red-light2">&#39;.w-app&#39;</span><span class="blue-grey">;</span></pre><p>For instance if you set the scope to <code>html &gt; body &gt; div.w-app</code>, the default
<code>.w-app .primary {color: #234781;}</code> would become
<code>html &gt; body &gt; div.w-app .primary {color: #234781;}</code>.</p>`,3),X=s(`This means you can control all the css rules specificity and consequently their priority!
`),Z=s("Disable the CSS layout classes (not recommended)"),ss=e("p",null,[s(`You may want to use another CSS framework (like Tailwind) instead of the Wave UI's built-in CSS
layout classes.`),e("br"),s(`
This is not recommended, but it's possible to disable the CSS layout classes of Wave UI so they
don't conflict with the external library.`),e("br"),s(`
For this, follow the above steps in `),e("a",{href:"#modify-your-config"},"Modify your config"),s(`, then you
can set the `),e("code",{class:"pink"},"$use-layout-classes"),s(" variable to "),e("code",null,"false"),s(".")],-1),es=s("You can have a look at all the classes that will not be genererated in this file:"),as={class:"ml2",href:"https://github.com/antoniandre/wave-ui/blob/master/src/wave-ui/scss/_layout.scss",target:"_blank"},ns=s("layout.scss on Github"),ts=s("mdi mdi-open-in-new"),os=s("Presets"),ls=s("Coming soon"),is=s(`// Buttons example.
{
  'w-button': { sm: true, outlined: true, round: true }
}`);function ps(rs,ds){const t=l("title-link"),i=l("alert"),o=l("ssh-pre"),c=l("w-icon"),r=l("w-tag");return d(),u("main",null,[a(t,{class:"mt4",h1:"",slug:"customization"},{default:n(()=>[h]),_:1}),a(i,{info:""},{default:n(()=>[b,g,m,y]),_:1}),f,a(t,{h2:""},{default:n(()=>[v]),_:1}),w,a(o,{class:"mb2",language:"shell"},{default:n(()=>[S]),_:1}),x,e("p",k,[C,e("ul",null,[I,e("li",null,[$,j,U,e("a",W,[z,a(c,{class:"ml1"},{default:n(()=>[D]),_:1})]),N])])]),V,T,a(o,{class:"mt5",language:"js",label:"main.js"},{default:n(()=>[B]),_:1}),F,e("ul",null,[O,e("li",Y,[G,a(o,{class:"mt5",language:"js",label:"vue.config.js"},{default:n(()=>[M]),_:1}),q,a(o,{language:"js",label:"vite.config.js"},{default:n(()=>[E]),_:1}),a(i,{info:""},{default:n(()=>[J]),_:1})])]),P,A,H,a(t,{h2:""},{default:n(()=>[K]),_:1}),L,a(t,{h2:""},{default:n(()=>[Q]),_:1}),R,a(i,{class:"mt6 py3",success:""},{default:n(()=>[X]),_:1}),a(t,{h2:""},{default:n(()=>[Z]),_:1}),ss,e("p",null,[es,e("a",as,[ns,a(c,{class:"ml1",sm:""},{default:n(()=>[ts]),_:1})])]),a(t,{h2:"",slug:"presets"},{default:n(()=>[os,a(r,{class:"ml3","bg-color":"red-light1",lg:"",color:"white"},{default:n(()=>[ls]),_:1})]),_:1}),a(o,{language:"js",label:"Javascript"},{default:n(()=>[is]),_:1})])}const cs={};var _s=_(cs,[["render",ps]]);export{_s as default};
