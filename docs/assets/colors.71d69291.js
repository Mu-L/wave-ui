import{_ as T,O as I}from"./index.76d51146.js";import{r as l,o as r,f as i,a as e,w as t,A as V,e as s,h as n,b as o,F as y,z as f,n as h,j as k,v as x,M as u,d as N}from"./vendor.c30f2c6c.js";const j=s("Colors"),B=o("p",null,[s(`Wave UI colors work in a very simple way: for instance the class
`),o("code",null,"pink"),s(` (or any color listed bellow) can be applied to any
element's text, and the class `),o("code",null,"pink--bg"),s(` can be applied to
any element's background.
`)],-1),P=o("p",null,[s("All the components that accept colors, will accept the "),o("code",null,"color"),s(`
prop for the text color, and `),o("code",null,"bg-color"),s(` for the background when applicable.
`)],-1),U=o("p",null,`This way, it is possible to mix a background color with a different
text color of your choice.
`,-1),W=s("Status colors"),A=u('<div class="w-flex wrap ma-2 text-center basis-zero"><div class="color success--bg title3 grow py3 ma2">success</div><div class="color error--bg title3 grow py3 ma2">error</div><div class="color warning--bg title3 grow py3 ma2">warning</div><div class="color info--bg title3 grow py3 ma2">info</div></div>',1),F=s(`The four status colors are considered dark and will therefore have a white text by default when used as a background color.
You can override this via CSS.
`),M=u('<h3>Status colors shades</h3><div class="w-flex wrap mb12 ma-2 text-center basis-zero"><div class="w-flex wrap"><div class="color success-light3--bg title3 py3 ma2 body xs12">success-light3</div><div class="color success-light2--bg title3 py3 ma2 body xs12">success-light2</div><div class="color success-light1--bg title3 py3 ma2 body xs12">success-light1</div><div class="color success-dark1--bg title3 py3 ma2 white body xs12">success-dark1</div><div class="color success-dark2--bg title3 py3 ma2 white body xs12">success-dark2</div><div class="color success-dark3--bg title3 py3 ma2 white body xs12">success-dark3</div></div><div class="w-flex wrap"><div class="color error-light3--bg title3 py3 ma2 body xs12">error-light3</div><div class="color error-light2--bg title3 py3 ma2 body xs12">error-light2</div><div class="color error-light1--bg title3 py3 ma2 body xs12">error-light1</div><div class="color error-dark1--bg title3 py3 ma2 white body xs12">error-dark1</div><div class="color error-dark2--bg title3 py3 ma2 white body xs12">error-dark2</div><div class="color error-dark3--bg title3 py3 ma2 white body xs12">error-dark3</div></div><div class="w-flex wrap"><div class="color warning-light3--bg title3 py3 ma2 body xs12">warning-light3</div><div class="color warning-light2--bg title3 py3 ma2 body xs12">warning-light2</div><div class="color warning-light1--bg title3 py3 ma2 body xs12">warning-light1</div><div class="color warning-dark1--bg title3 py3 ma2 white body xs12">warning-dark1</div><div class="color warning-dark2--bg title3 py3 ma2 white body xs12">warning-dark2</div><div class="color warning-dark3--bg title3 py3 ma2 white body xs12">warning-dark3</div></div><div class="w-flex wrap"><div class="color info-light3--bg title3 py3 ma2 body xs12">info-light3</div><div class="color info-light2--bg title3 py3 ma2 body xs12">info-light2</div><div class="color info-light1--bg title3 py3 ma2 body xs12">info-light1</div><div class="color info-dark1--bg title3 py3 ma2 white body xs12">info-dark1</div><div class="color info-dark2--bg title3 py3 ma2 white body xs12">info-dark2</div><div class="color info-dark3--bg title3 py3 ma2 white body xs12">info-dark3</div></div></div>',2),D=o("span",{class:"code"},"primary",-1),Y=s(", "),E=o("span",{class:"code"},"secondary",-1),H=s(" and your own colors & shades"),L=o("p",null,[s(`In addition to the built-in status colors and color palette bellow, you can define a set
of custom colors.`),o("br"),s(`
The primary color, and whichever color you add, will also be computed to 6 different shades:
3 lighter ones and 3 darker ones.`),o("br"),s(`
More shades would most likely be redundant with the color palette.
`)],-1),O=o("div",{class:"color primary-light3--bg title3 grow basis-zero py3 white body"},"primary-light3",-1),q=o("div",{class:"color primary-light2--bg title3 grow basis-zero py3 white body"},"primary-light2",-1),G=o("div",{class:"color primary-light1--bg title3 grow basis-zero py3 white body"},"primary-light1",-1),J=o("div",{class:"color primary--bg title3 grow basis-zero py3 white"},"primary",-1),K=o("div",{class:"color primary-dark1--bg title3 grow basis-zero py3 white body"},"primary-dark1",-1),Q=o("div",{class:"color primary-dark2--bg title3 grow basis-zero py3 white body"},"primary-dark2",-1),R=o("div",{class:"color primary-dark3--bg title3 grow basis-zero py3 white body"},"primary-dark3",-1),X=s(`The primary color is considered dark by default, and will render,
as well as its 3 darker shades, with a white text when used as a background color.
`),Z=o("p",{class:"mt6 title3"},"To start defining your own colors add them to the WaveUI options:",-1),oo=s(`const waveui = new WaveUI({
  colors: {
    primary: '#9ac332',
    secondary: '#5d9a26'
  }
})
`),so=s("If you don't need it, you can add "),eo=o("code",null,"css: { colorShades: false }",-1),to=s(` to the Wave UI options to disable
the color shades computing of the status colors and your custom colors.
`),ao=s("Color Palette"),lo=o("p",null,`This built-in color palette will complete your collection of available colors for fast and easy designs.
`,-1),ro={class:"w-flex wrap ma-2 basis-zero"},io={class:"color-palette ma2"},co=u('<div class="color color--top ma2 black--bg"><span>black</span><small>#000</small></div><div class="color color--top ma2 white--bg black"><span>white</span><small>#fff</small></div><div class="color color--top ma2 transparent--bg black"><span>transparent</span><small>transparent</small></div><div class="color color--top ma2 inherit--bg black"><span>inherit</span><small>inherit</small></div>',4),no=[co],ho=s("Your own CSS color classes"),go=o("p",null,[s("All the presented colors above are here to make you go faster when you need a color."),o("br"),s(`
But you are completely free to define CSS classes in your CSS to associate a color to a class.`),o("br"),s(`
For instance, you can define:`)],-1),po=s(`.mint-green {color: #acebd7;}
.navy-blue--bg {background-color: #345276;}
`),bo=o("p",{class:"mt6"},"...and use it on a component like this:",-1),yo=s('w-tag(color="mint-green" bg-color="navy-blue" lg)'),uo=s('<w-tag color="mint-green" bg-color="navy-blue" lg>tag</w-tag>'),mo=s("Tag");function vo(a,m,wo,fo,ko,xo){const c=l("title-link"),g=l("alert"),v=l("w-flex"),d=l("ssh-pre"),z=l("w-button"),S=l("w-tag");return r(),i("main",null,[e(c,{class:"mt4",h1:""},{default:t(()=>[j]),_:1}),B,P,U,e(c,{h2:""},{default:t(()=>[W]),_:1}),A,e(g,{class:"mb12",warning:""},{default:t(()=>[F]),_:1}),M,e(c,{h2:"",slug:"primary-secondary-and-your-own-colors-and-shades"},{default:t(()=>[D,Y,E,H]),_:1}),L,e(v,{class:"text-center",wrap:"",gap:4},{default:t(()=>[O,q,G,J,K,Q,R]),_:1}),e(g,{warning:""},{default:t(()=>[X]),_:1}),Z,e(d,{language:"js"},{default:t(()=>[oo]),_:1}),e(g,{tip:""},{default:t(()=>[so,eo,to]),_:1}),e(c,{class:"mt12 mb4 w-flex align-center",h2:"",slug:"color-palette"},{default:t(()=>[ao,e(z,{class:"ml6","bg-color":"primary",sm:"",dark:"",onClick:m[0]||(m[0]=V(_=>a.horizontal=!a.horizontal,["prevent"]))},{default:t(()=>[s(n(a.horizontal?"Vertical":"Horizontal")+" display",1)]),_:1})]),_:1}),lo,o("div",{class:h(["text-center",`${a.horizontal?"horizontal":"vertical"}`])},[o("div",ro,[(r(!0),i(y,null,f(a.colors,({color:_,label:w,shades:C},$)=>(r(),i("div",{class:"color-palette ma2",key:$},[(r(!0),i(y,null,f(C,(p,b)=>(r(),i(y,{key:b},[b===5?(r(),i("div",{key:0,class:h(["color color--top",`${w}--bg`])},[o("span",null,n(w),1),o("small",null,n(_),1)],2)):N("",!0),o("div",{class:h(["color color--shade",[`${p.label}--bg`,b>=5?"color--darker":""]])},[o("span",null,n(p.label),1),o("small",null,n(p.color),1)],2)],64))),128))]))),128)),o("div",io,[o("div",{class:h(["w-flex ma-2",{column:!a.horizontal}])},no,2)])])],2),e(c,{h2:""},{default:t(()=>[ho]),_:1}),go,e(d,{language:"css"},{default:t(()=>[po]),_:1}),bo,e(v,{gap:"6"},{default:t(()=>[k(e(d,{class:"ml3",language:"pug",label:"Pug"},{default:t(()=>[yo]),_:1},512),[[x,a.$store.state.usePug]]),k(e(d,{class:"ml3",language:"html-vue"},{default:t(()=>[uo]),_:1},512),[[x,!a.$store.state.usePug]]),e(S,{class:"mb4 align-self-end",color:"mint-green","bg-color":"navy-blue",lg:""},{default:t(()=>[mo]),_:1})]),_:1})])}const _o={data:()=>({colors:I,horizontal:!1})};var Co=T(_o,[["render",vo]]);export{Co as default};
